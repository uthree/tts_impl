[project]
name = "tts-impl"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "alias-free-torch>=0.0.6",
    "black>=25.9.0",
    "codespell>=2.4.1",
    "hydra-core>=1.3.2",
    "isort==5.0.0",
    "lightning>=2.5.5",
    "mypy>=1.18.2",
    "numba>=0.62.1",
    "omegaconf>=2.3.0",
    "pyaudio>=0.2.14",
    "pylint>=4.0.2",
    "pysen>=0.11.0",
    "pytest>=8.4.2",
    "pyworld>=0.3.5",
    "rich>=14.2.0",
    "rich-argparse>=1.7.1",
    "rotary-embedding-torch>=0.8.9",
    "safetensors>=0.6.2",
    "scipy>=1.16.2",
    "soundfile>=0.13.1",
    "tensorboard>=2.20.0",
    "toml>=0.10.2",
    "torch-yin>=0.1.3",
    "torchfcpe>=0.0.4",
    "tqdm>=4.67.1",
    "transformers>=4.57.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.pytest.ini_options]
pythonpath = ["src/"]
testpaths = ["test"]

[tool.hatch.build.targets.wheel]
packages = ["src/tts_impl/"]

[tool.pysen]
version = "0.11"

[tool.pysen.lint]
enable_black = true
enable_flake8 = true
enable_isort = true
enable_mypy = true
mypy_preset = "strict"
isort_known_third_party = ["numpy"]
isort_known_first_party = ["pysen"]
mypy_ignore_packages = ["pysen.generated.*"]
mypy_path = ["stubs"]
line_length = 88
py_version = "py312"

[[tool.pysen.lint.mypy_targets]]
paths = ["test/", "src/", "scripts/"]

[tool.pysen.lint.source]
includes = ["."]
include_globs = ["**/*.template"]
excludes = ["third_party/"]
exclude_globs = ["**/*_grpc.py"]

[tool.pysen.lint.mypy_modules."pysen.scripts"]
preset = "entry"

[tool.pysen.lint.mypy_modules."numpy"]
ignore_errors = true
